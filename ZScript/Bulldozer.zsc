// ------------------------------------------------------------
// MAKE WAY FOR THE DOOOOOZEEEEER
// ------------------------------------------------------------

class PB_DozerZombie:HDHumanoid{
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Bulldozer"
		//$Sprite "BDZRA0"

		radius 14;
		height 54;
		
		+missilemore
		
		monster;
		maxtargetrange 1000;
		
		seesound "grunt/bulldozer/sight";
		painsound "grunt/bulldozer/pain";
		deathsound "grunt/bulldozer/death";
		activesound "grunt/bulldozer/active";
		tag "Bulldozer";
		hdmobbase.stepsound "grunt/bulldozer/step";
		//hdmobbase.gunheight 12;

		painchance 60;
		//hdmobbase.shields 50;
		health 500; //to compensate them being a HK replacement
		mass 200;
		speed 9;
		obituary "%o caught all the buckshot from the bulldozer.";
		hitobituary "%o was flattened by a bulldozer.";
	}
	double turnamount;
	int user_weapon;
	int mag;
	int firemode; // -1 semi only; 0 semi; 1 auto;
	bool aiming;

	override void postbeginplay(){
		super.postbeginplay();
		
		gunheight=32;
		bhashelmet;
		bnoincap;
		givearmour(1.,1.,0.0); //spawns with blue armor
		
		mag=random(1,10);
	}
	
	override void tick()
	{
		super.tick();
		
		if(!instatesequence(curstate,resolvestate("sliding")))
		{
			A_SpriteOffset(0,0);
		}
		
		if(instatesequence(curstate,resolvestate("aiming.lr"))
		||instatesequence(curstate,resolvestate("aiming"))
		||instatesequence(curstate,resolvestate("shoot.lr"))
		||instatesequence(curstate,resolvestate("shoot"))
		)
		{
			A_LaserSight();
			if(!isfrozen())
			{
				A_SetAngle(angle+frandom(-0.03,0.03),SPF_INTERPOLATE);
				A_SetPitch(pitch+frandom(-0.03,0.03),SPF_INTERPOLATE);
			}
		}
	}

	action void A_LaserSight()
    {
        FLineTraceData trace;
		double rtt=0.03*trace.distance;
		double saf=1.;
		let hdm=hdmobbase(self);
		
		//A_CustomRailgun(0,0,"","Red",RGF_FULLBRIGHT|RGF_SILENT|RGF_NOPIERCING|RGF_CENTERZ
		//				,0,1,"ACRScanDot",0,0,0,1,0.1,0,null,(hdm.gunheight)*0.5,limit:1);
		
				linetrace(
					hdm.angle,HDCONST_ONEMETRE*2500,hdm.pitch,
					flags:TRF_NOSKY|TRF_ABSOFFSET,
					offsetz:hdm.gunheight,
					data:trace
				);
		
        Vector3 laserOfs = trace.hitLocation-pos;
		laserOfs-=trace.hitdir;
		
				if(
			trace.hittype==Trace_HitNone
			||(
				trace.hitline&&(
					trace.hitline.special==Line_Horizon
					||(
						trace.linepart==2
						&&trace.hitsector.gettexture(0)==skyflatnum
					)||(
						trace.linepart==1
						&&trace.hitline.sidedef[1]
						&&hdmath.oppositesector(trace.hitline,trace.hitsector).gettexture(0)==skyflatnum
					)
				)
			)
		)return;
		
		a_spawnparticleex(
						"ff 00 00",TexMan.CheckForTexture("lasfx000"),STYLE_ADD,SPF_FULLBRIGHT|SPF_RELVEL|SPF_NOTIMEFREEZE,
						lifetime:1,frandom(3.1,3.5),0,
						laserOfs.x,
						laserOfs.y,
						laserOfs.z,
						startalphaf:1
					);
		a_spawnparticleex(
						"ff 00 00",TexMan.CheckForTexture("lasfx000"),STYLE_ADD,SPF_FULLBRIGHT|SPF_RELVEL|SPF_NOTIMEFREEZE,
						lifetime:4,frandom(4.1,4.9),0,
						laserOfs.x,
						laserOfs.y,
						laserOfs.z,
						startalphaf:0.5,0.1,-1.5
					);
    }

	/*void A_ZomFrag(){
		bool garbage;actor gg;
		double cpp=cos(pitch);double spp=sin(pitch);
		[garbage,gg]=A_SpawnItemEx("HDFlashbangSpoon",
			cpp*-4,-3,height-6-spp*-4,
			cpp*3,0,-spp*3,
			frandom(30,45),SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
		);
		gg.vel+=self.vel;
		double gforce=frandom(10,30);
		[garbage,gg]=A_SpawnItemEx("HDFlashbangThrown",
			0,0,height-6,
			cpp*gforce,0,-spp*gforce,
			0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
		);
		gg.vel+=self.vel;
	}*/
	
	void A_EjectShotgunCasing(){
		HDWeapon.EjectCasing(self,"HDSpentShell",
			-frandom(79,81),
			(frandom(7,7.5),0,0),
			(13,0,0)
		);
	}
	
	override void deathdrop(){
		if(bhasdropped&&bfriendly)return;
		hdweapon wp=null;{
			if(!bhasdropped){
				if(wp=DropNewWeapon("HD_CAWSGUN")){
					(random(0,1)*CAWSG_CHAMBER);
					wp.weaponstatus[CAWSG_MAG]=mag;
					wp.weaponstatus[CAWSG_AUTO]=1;
				}
			}else{
				DropNewItem("HD_CAWSMag",96);
			}
		}
		if(!bhasdropped){
			DropNewItem("HDHandgunRandomDrop");
			bhasdropped=true;
		}
	}
	
	//post-shot checks
	void A_HDMonsterRefire(statelabel jumpto,int chancetocontinue=0){
		if(
			random(1,100)>chancetocontinue
			&&(
				!target
				||!checksight(target)
				||target.health<1
				||absangle(angle,angleto(target))>3
				||!hdmobai.tryshoot(self,flags:hdmobai.TS_GEOMETRYOK)
			)
		)setstatelabel(jumpto);
	}
	
	states{
	spawn:
		BDZR A 0;
	idle:
	spawn2:
		#### A 0{
			A_SpriteOffset(0,0);
			A_HDLook();
			A_Recoil(frandom(-0.1,0.1));
			bnofear;
		}
		#### EEE 1{
			A_SetTics(random(5,17));
			A_HDLook();
		}
		#### E 1{
			A_Recoil(frandom(-0.1,0.1));
			A_SetTics(random(10,40));
		}
		#### B 0 A_Jump(28,"spawngrunt");
		#### B 0 A_Jump(132,"spawnswitch");
		#### B 8 A_Recoil(frandom(-0.2,0.2));
		loop;
	spawngrunt:
		#### G 1{
			A_Recoil(frandom(-0.4,0.4));
			A_SetTics(random(30,80));
			if(!random(0,7))A_Vocalize(activesound);
		}
		#### A 0 A_Jump(256,"spawn2");
	spawnswitch:
		#### A 0 A_JumpIf(bambush,"spawnstill");
		goto spawnwander;
	spawnstill:
		#### A 0 A_HDLook();
		#### A 0 A_Recoil(random(-1,1)*0.4);
		#### CD 5 A_SetAngle(angle+random(-4,4));
		#### A 0{
			A_HDLook();
			if(!random(0,127))A_Vocalize(activesound);
		}
		#### AB 5 A_SetAngle(angle+random(-4,4));
		#### B 1 A_SetTics(random(10,40));
		#### A 0 A_Jump(256,"spawn2");
	spawnwander:
		BDZR A 0 A_HDLook();
		#### CD 5 A_Wander();
		#### AB 5{
			A_HDLook();
			if(!random(0,15))A_Vocalize(activesound);
			A_Wander();
		}
		#### A 0 A_Jump(196,"spawn");
		loop;
	missile:
		#### A 0{
			if(!target){
				setstatelabel("spawn2");
				return;
			}
			//he is so unbelievably ass to fight against
			/*double dt=distance3d(target);
			if(
				target
				&&!random(0,2)
				&&dt>25
				&&dt<400
			)setstatelabel("frag");*/
		}
	missile2:
		#### ABCD 3 A_TurnToAim(40,shootstate:"aiming");
		loop;
	aiming:
		#### E 1
		{
			double dt=distance3d(target);
			if(
				//target
				dt>550
			)setstatelabel("aiming.lr");
		}
	sliding:
		#### A 0 A_StartSound("player/hdguy/land",flags:CHANF_OVERLAP);
		#### W 0 A_HumanoidMeleeAttack(height*0.6,5.);
		#### AAAWWWWWW 1 
		{
			A_Recoil(-1.75);
			A_SpriteOffset(frandom(-2,2),frandom(-1,0));
			//A_HumanoidMeleeAttack(frandom(height*0.05,(!!target?target.height:0.4)),1.4);
		}
		postslide:
		#### W 5 
		{
			A_FaceTarget(50,25);
			A_Vocalize(seesound);
			A_SpriteOffset(0,0);
		}
		//#### E 1 A_StartAim(maxspread:20,maxtics:random(0,35));
		//fallthrough to shoot
	shoot:
		#### E 0 A_FaceTarget(5,75);
		#### E 1 A_StartAim(maxspread:20,maxtics:random(0,35));
	fire:
		//#### E 2 A_LeadTarget(6);
		#### F 1 bright light("SHOT"){
			if(mag<1){
				setstatelabel("ohforfuckssake");
				return;
			}else{
				//A_StartSound("weapons/steyracr/fire",CHAN_WEAPON);
				HD_CAWSGUN.FireShell(self);
				A_EjectShotgunCasing();
				mag--;
				}
		}
		//#### E 3;
		#### EEE 2 A_FaceTarget(4,75);
		#### E 0 A_JumpIfTargetInLOS("shoot");
		#### E 0 A_Jump(196,"shoot");
	postshot:
		#### E 12{
			if(!random(0,127))A_Vocalize(activesound);
			if(mag<1){
				setstatelabel("reload");
				return;
			}
			spread=max(0,spread-1);
			A_SetTics(random(2,6));
		}
		#### E 3;
		#### E 0 A_JumpIf(!hdmobai.tryshoot(self),"see");
		#### E 0 A_JumpIfTargetInLOS(1);
		goto coverfire;  //even if not in los,occasionally keep shooting anyway
		#### E 3 A_FaceTarget(10,10);
		#### E 0 A_Jump(50,"see");  //even if in los,occasionally stop shooting anyway
		goto coverfire;

	coverfire:
		#### E 1{
			spread=2;
			A_Coverfire();
			A_SetTics(random(2,6));
		}
		wait;

	aiming.lr:
		#### E 3 {A_FaceLastTargetPos(60);A_Vocalize(activesound);}
		#### E 1 A_StartAim(maxspread:20,maxtics:random(0,35));
		#### E 1 A_LeadTarget(lasttargetdist*0.01,randompick(0,0,0,1));
		//fallthrough to shoot
	shoot.lr:
		#### E 1 A_SetTics(min(1,int(lasttargetdist)>>5));
		#### E 0{
			pitch+=frandom(-spread,spread);
			angle+=frandom(-spread,spread);
		}
	fire.lr:
		#### F 1 bright light("SHOT"){
			if(mag<1){
				setstatelabel("ohforfuckssake");
				return;
			}else{
				//A_StartSound("weapons/steyracr/fire",CHAN_WEAPON);
				HD_CAWSGUN.FireShell(self);
				A_EjectShotgunCasing();
				mag--;}
		}
		#### E 2;
		#### A 0; //A_Jump(128,"fire.lr");
		//fallthrough to postshot
	postshot.lr:
		#### E 4{
			if(!random(0,127))A_Vocalize(activesound);
			if(mag<1){
				setstatelabel("reload");
				return;
			}
			spread=max(0,spread-1);
			A_SetTics(random(2,6));
		}
		#### E 8;
		#### E 0 A_JumpIf(!hdmobai.tryshoot(self),"see");
		#### E 3 A_FaceTarget(10,10);
		//#### E 0 A_Jump(50,"see");  //even if in los,occasionally stop shooting anyway
		goto see;
		
	/*frag:
		#### A 5 A_Vocalize(seesound);
		#### A 5{
			A_StartSound("weapons/pocket",CHAN_WEAPON);
			A_FaceTarget(0,0);
			pitch-=random(10,50);
		}
		#### E 3;
		#### E 5{
			//A_SpawnItemEx("HDFragSpoon",cos(pitch)*4,-1,height-6-sin(pitch)*4,cos(pitch)*cos(angle)*4+vel.x,cos(pitch)*sin(angle)*4+vel.y,sin(-pitch)*4+vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_ZomFrag();
		}
		#### A 0 A_JumpIf(mag<1,"reload");
		#### A 0 setstatelabel("see");*/

	jammed:
		#### E 8;
		#### E 0 A_Jump(128,"see");
		#### E 4 A_Vocalize(random(0,2)?seesound:painsound);
		---- A 0 setstatelabel("see");

	ohforfuckssake:
		#### E 8;
	reload:
		#### A 0 A_JumpIf(mag<0,"unloadedreload");
		#### A 2 A_StartSound("weapons/rifleclick2",8);
		#### AA 1 A_HDChase("melee",null,flags:CHF_FLEE);
		#### A 0{
			A_StartSound ("weapons/cawsmagout",8,CHANF_OVERLAP);
			name emptymag="HD_CAWSMag";
			HDMagAmmo.SpawnMag(self,emptymag,0);
			mag=-1;
		}
	unloadedreload:
		#### BCD 2 A_HDChase("melee",null,flags:CHF_FLEE);
		#### EE random(4,6) A_StartSound("weapons/pocket",8);
		//#### E 3 {A_StartSound("weapons/rifleclick2");}
		#### E 12{
			A_StartSound ("weapons/cawsmagin",8,CHANF_OVERLAP);
			mag=10;
		}
		#### E 14 {A_StartSound("weapons/cawsboltback",CHAN_6,volume:0.8);}
		#### E 6 {A_StartSound("weapons/cawsboltfwd",CHAN_6,volume:0.8);}
		#### CCBB 2 A_HDWander();
	see:
		#### ABCD random(3,4) A_HDChase(speedmult:1.5);
		#### A 0 A_JumpIf(!jammed&&mag<1,"reload");
		#### A 0 A_Jump(116,"roam","roam","roam","roam2","roam2");
		loop;
	roam:
		#### A 0 A_JumpIf(!jammed&&mag<1,"reload");
		#### E 3 A_Jump(60,"roam2");
		#### E 0{spread=1;}
		#### E 4 A_Watch();
		#### E 0{spread=0;}
		#### EEE 4 A_Watch();
		#### A 0 A_Jump(60,"roam");
	roam2:
		#### A 0 A_Jump(8,"see");
		#### ABCD 5 A_HDChase(speedmult:0.6);
		#### A 0 A_Jump(140,"Roam");
		#### A 0 A_JumpIfTargetInLOS("see");
		loop;
	turnaround:
		#### A 0 A_FaceTarget(15,0);
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### E 0{spread=3;}
		#### A 0 A_FaceTarget(15,0);
		#### E 0{spread=6;}
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### E 0{spread=4;}
		#### ABCD 3 A_HDChase();
		---- A 0 setstatelabel("see");
	pain:
		#### G 2;
		#### G 3 A_Vocalize(painsound);
		#### G 0{
			A_ShoutAlert(0.1,SAF_SILENT);
			if(
				floorz==pos.z
				&&target
				&&(
					!random(0,4)
					||distance3d(target)<128
				)
			){
				double ato=angleto(target)+randompick(-90,90);
				vel+=((cos(ato),sin(ato))*speed,1.);
				setstatelabel("missile");
			}
		}
		#### ABCD 2 A_HDChase(flags:CHF_FLEE);
		---- A 0 setstatelabel("see");

	//melee start

	melee:
		#### B 4 A_FaceTarget(0,0);
		#### A 0 A_JumpIf(
			!random(0,15)
			||(
				target
				&&target.pos.z+target.height<pos.z+height*0.6
			)
		,"meleekick");
		#### A 0 A_Jump(256,"meleeheadbig");
	meleekick:
		#### BC 3;
		#### A 6{
			pitch=0;
			A_HumanoidMeleeAttack(frandom(height*0.05,(!!target?target.height:0.4)),1.4);
		}
		#### A 0 setstatelabel("meleeend");
	meleebody:
		#### CD 3;
		#### E 5 A_HumanoidMeleeAttack(height*0.6,3);
		#### A 0 setstatelabel("meleeend");
	meleehead:
		#### CD 3;
		#### E 5 {
			pitch+=frandom(-40,-8);
			A_HumanoidMeleeAttack(height*0.7,3);
		}
		#### A 0 setstatelabel("meleeend");
	meleeheadbig:
		#### BC 3;
		#### A 6{
			pitch=0;
			A_HumanoidMeleeAttack(frandom(height*0.05,(!!target?target.height:0.4)),1.4);
		}
		#### E 1 {
			pitch+=frandom(-45,-8);
			A_HumanoidMeleeAttack(height*0.7,15.);
		}
		#### E 4 A_TurnHandDirection(-10);
		#### A 0 setstatelabel("meleeend");
	meleeend:
		#### D 3 A_JumpIf(
			findstate("missile2",true)
			&&target
			&&!A_JumpIfCloser(64,"null")
		,"meleeendshoot");
		#### A 0 setstatelabel("see");
	meleeendshoot:
		#### E 3;
		#### E 4 A_FaceTarget(10,10);
		#### A 0 setstatelabel("shoot");

	//melee end
	falldown:
		#### H 5;
		#### I 5 A_Vocalize(deathsound);
		#### JJKKK 2 A_SetSize(-1,max(deathheight,height-10));
		#### L 0 A_SetSize(-1,deathheight);
		#### L 5;
		#### M 10 A_KnockedDown();
		wait;
	standup:
		#### MLK 6;
		#### J 0 A_Jump(160,2);
		#### J 0 A_Vocalize(seesound);
		#### JI 4 A_Recoil(-0.3);
		#### HE 6;
		#### A 0 setstatelabel("see");

	death:
		BDZR H 5;
		BDZR I 5{
			A_Vocalize(deathsound);
		}
		BDZR J 5;
		BDZR KLM 5;
	dead:
		BDZR M 1;
		BDZR M 5 canraise{
			if(abs(vel.z)>1)setstatelabel("dead");
		}wait;
	xxxdeath:
		BDZR N 3;
		BDZR O 3{
			A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
			A_XScream();
		}
		BDZR P 2;
		BDZR QRST 5;
		---- A 0 setstatelabel("gib");

	gib:
		BDZR N 5;
		BDZR O 4{
			A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
			A_XScream();
		}
		BDZR P 4 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		BDZR QRS 4;
		BDZR Q 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		BDZR T 4 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
	gibbed:
		BDZR U 4;
		BDZR V 5 canraise{
			if(abs(vel.z)>1)setstatelabel("dead");    
		}wait;
	raise:
		BDZR M 2 A_SpawnItemEx("MegaBloodSplatter",0,0,4,0,0,3,0,SXF_NOCHECKPOSITION);
		BDZR ML 6;
		BDZR KJIH 4;
		#### A 0 A_Jump(256,"see");
	ungib:
		BDZR U 6 A_SpawnItemEx("MegaBloodSplatter",0,0,4,0,0,3,0,SXF_NOCHECKPOSITION);
		BDZR TS 6 A_SpawnItemEx("MegaBloodSplatter",0,0,4,0,0,3,0,SXF_NOCHECKPOSITION);
		BDZR RQPO 6;
		BDZR N 5;
		#### A 0 A_Jump(256,"see");
	}
}