// ------------------------------------------------------------
// Volt XM6A1
// ------------------------------------------------------------

//const HDLD_COLTCOMMANDO_CS="c15"; make enemy exclusive

class HDColtCommando_CS:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "SMG"
		//$Sprite "M4CPA0"

		+hdweapon.fitsinbackpack
		obituary "%o was soaked by %k's pea stream.";
		weapon.slotnumber 4;
		weapon.selectionorder 125;
		weapon.slotpriority 0.5;
		weapon.kickback 15;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.7;
		inventory.pickupmessage "You got the Spec-Ops Carbine!";
		hdweapon.barrelsize 28,0.9,1;
		//hdweapon.refid HDLD_COLTCOMMANDO_CS;
		tag "Volt XM6A1 ''Black Hawk''";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	
	override void tick(){
		super.tick();
		drainheat(COLTM4S_HEAT,6);
	}

	action void A_LaserSight()
    {
        double zOffset = (height/2+HDPlayerPawn(self).attackZOffset) * player.crouchFactor;
		vector3 shootpos=(0,0,zoffset);
		let hdp=hdplayerpawn(self);
		if(hdp){
			shootpos=hdp.gunpos;
		}
        FLineTraceData trace;
		double rtt=0.03*trace.distance;
		double saf=1.;
		
				linetrace(
					hdp.gunangle,HDCONST_ONEMETRE*2500,hdp.gunpitch,
					flags:TRF_NOSKY|TRF_ABSOFFSET,
					offsetz:shootpos.z,
					offsetforward:shootpos.x,
					offsetside:shootpos.y,
					data:trace
				);
		
        Vector3 laserOfs = trace.hitLocation-pos;
		laserOfs-=trace.hitdir;
		
				if(
			trace.hittype==Trace_HitNone
			||(
				trace.hitline&&(
					trace.hitline.special==Line_Horizon
					||(
						trace.linepart==2
						&&trace.hitsector.gettexture(0)==skyflatnum
					)||(
						trace.linepart==1
						&&trace.hitline.sidedef[1]
						&&hdmath.oppositesector(trace.hitline,trace.hitsector).gettexture(0)==skyflatnum
					)
				)
			)
		)return;
		
		a_spawnparticleex(
						"ff 00 00",TexMan.CheckForTexture("lasfx000"),STYLE_ADD,SPF_FULLBRIGHT|SPF_RELVEL|SPF_NOTIMEFREEZE,
						lifetime:1,frandom(3.1,3.5),0,
						laserOfs.x,
						laserOfs.y,
						laserOfs.z,
						startalphaf:1
					);
		a_spawnparticleex(
						"ff 00 00",TexMan.CheckForTexture("lasfx000"),STYLE_ADD,SPF_FULLBRIGHT|SPF_RELVEL|SPF_NOTIMEFREEZE,
						lifetime:4,frandom(4.1,4.9),0,
						laserOfs.x,
						laserOfs.y,
						laserOfs.z,
						startalphaf:0.5,0.1,-1.5
					);
    }
	
	override double gunmass(){
		return 8+((weaponstatus[COLTM4S_MAG]<0)?-0.5:(weaponstatus[COLTM4S_MAG]*0.06));
	}
	override double weaponbulk(){
		int mg=weaponstatus[COLTM4S_MAG];
		if(mg<0)return 90;
		else return (90+ENC_STEYRACR_MAG_LOADED)+mg*ENC_6MMFLECHETTE_LOADED;
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(COLTM4S_MAG,"PB_HDSteyrACRMag");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD6mmFlechetteAmmo"))owner.A_DropInventory("HD6mmFlechetteAmmo",amt*42);
			else owner.A_DropInventory("PB_HDSteyrACRMag",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HD6mmFlechetteAmmo");
		owner.A_TakeInventory("PB_HDSteyrACRMag");
		owner.A_GiveInventory("PB_HDSteyrACRMag");
	}
	override string,double getpickupsprite(){
		return "M4CP"..((weaponstatus[COLTM4S_MAG]<0)?"B":"A").."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("PB_HDSteyrACRMag")));
			if(nextmagloaded>=42){
				sb.drawimage("ACMGNORM",(-48,-3),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("ACMGEMPTY",(-48,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"ACMGNORM","ACMGGREY",
				nextmagloaded,42,
				(-48,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("PB_HDSteyrACRMag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepcounter(hdw.weaponstatus[COLTM4S_AUTO],
			-22,-10,"RBRSA3A7","STBURAUT","STFULAUT"
		);
		
		sb.drawstring(
			sb.pnewsmallfont,((hdw.weaponstatus[0]&COLTM4F_LASER)?"ON":"OFF"),
			(-22,-19),sb.DI_TEXT_ALIGN_CENTER|sb.DI_TRANSLATABLE|sb.DI_SCREEN_CENTER_BOTTOM,
			Font.CR_WHITE,scale:(0.4,0.4)
		);
		
		sb.drawwepnum(hdw.weaponstatus[COLTM4S_MAG],42);
		if(hdw.weaponstatus[COLTM4S_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_FIREMODE.."  Semi/Burst\n"
		..WEPHELP_ALTFIRE.."  Toggle Laser\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*1.1;
		sb.drawimage(
			"CLT9_ST1",(0,-3.35)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.98,scale:(1.05,1.05)
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"CLT9_ST2",(0,-13.85)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,scale:(1.30,1.30)
		);
	}
	states{
	select0:
		M4CG A 0;
		goto select0small;
	deselect0:
		M4CG A 0;
		goto deselect0small;

	//Laser
	
		laserpointer:
		TNT1 A 1{
			if(invoker.weaponstatus[0]&COLTM4F_LASER){
				A_LaserSight();
			}
		}loop;

	ready:
		M4CG A 0;
		#### A 1{
			A_Overlay(3,"laserpointer");
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
			invoker.weaponstatus[SACRS_RATCHET]=0;
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("PB_HDSteyrACRMag");
		goto ready;

	altfire:
		#### # 1 offset(0,33);
		#### # 2 offset(2,35)
		{
			A_StartSound("weapons/rifleclick2",CHAN_6,CHANF_OVERLAP,0.1);
			invoker.weaponstatus[0]^=COLTM4F_LASER;
		}
		#### # 1 offset(-1,33);
		goto nope;
		
	hold:
		#### A 0{
			if(
				//full auto
				invoker.weaponstatus[COLTM4S_AUTO]==2
			)setweaponstate("fire2");
			else if(
				//burst
				invoker.weaponstatus[COLTM4S_AUTO]<1
				||invoker.weaponstatus[COLTM4S_RATCHET]>2
			)setweaponstate("nope");
		}goto fire2;
	user2:
	firemode:
		---- A 1{
			int aut=invoker.weaponstatus[COLTM4S_AUTO];
			if(aut>=1)invoker.weaponstatus[COLTM4S_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[COLTM4S_AUTO]=0;
			else invoker.weaponstatus[COLTM4S_AUTO]++;
		}goto nope;
	fire:
		#### A 1;
	fire2:
		#### B 1 offset(0,34){
			if(invoker.weaponstatus[COLTM4S_CHAMBER]==2){
				A_GunFlash();
				A_WeaponOffset(frandom(-3,3),frandom(30,33));
			}else{
				if(invoker.weaponstatus[COLTM4S_CHAMBER]==1)setweaponstate("clear.jam");
				else setweaponstate("nope");
			}
		}
		#### B 1 offset(0,36);
		#### A 0 A_Jump((invoker.weaponstatus[COLTM4S_HEAT]*0.3),"Jammer.Lammy");
		#### A 1 offset(0,33){
			if(invoker.weaponstatus[COLTM4S_CHAMBER]==1){
			
				A_EjectCasing("HDSpent6mmFlechette",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COLTM4S_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COLTM4S_MAG]>0){
				invoker.weaponstatus[COLTM4S_MAG]--;
				invoker.weaponstatus[COLTM4S_CHAMBER]=2;
			}
			{
				if(invoker.weaponstatus[COLTM4S_AUTO]==1)
				{invoker.weaponstatus[COLTM4S_RATCHET]++;}
			}
		}
		#### A 0 A_ReFire();
		goto readyend;
	Jammer.Lammy:
		#### A 4 offset(1,38) A_StartSound("weapons/smg/355/fwd",CHAN_7,volume:0.8,pitch:0.8);
		#### A 2 offset(-1,35);
		#### A 2 offset(0,33);
		#### A 1;
		goto nope;
	flash:
		M4CF A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_6mmFlechette",spread:1.15,speedfactor:0.9);
			if(
				frandom(0,ceilingz-floorz)<bbb.speed*(0.4)
			)A_AlertMonsters(512);
			
			invoker.weaponstatus[COLTM4S_HEAT]+=7;

			A_StartSound("weapons/steyracr/fire",CHAN_WEAPON);
			invoker.weaponstatus[COLTM4S_CHAMBER]=1;
		}
		SMR2 A 0 bright
		{
			if(invoker.weaponstatus[COLTM4S_MAG]%2)
			setweaponstate("flash.a",PSP_FLASH);
		}
		goto flash.b;
	flash.a: SMR2 AB 0 bright A_Jump(128,"flash.c"); goto flash.c;
	flash.b: SMR2 CD 0 bright A_Jump(128,"flash.c");
	flash.c:
		M4CF # 0;
		//TNT1 A 0;
		#### # 1 bright{
			A_ZoomRecoil(min(0.95,1.-0.05*min(invoker.weaponstatus[COLTM4S_AUTO],1)));
			
			A_MuzzleClimb(
				-frandom(0.1,0.1),-frandom(0,0.1),
				-0.2,-frandom(0.3,0.4),
				-frandom(0.4,1.4),-frandom(1.3,2.6)
			);
			HDFlashAlpha(15);
			//A_Light1();
		}
		goto lightdone;

	clear.jam:
		#### F 2 offset(2,34) A_JumpIf(invoker.weaponstatus[COLTM4S_CHAMBER]<1,"nope");
		#### G 2 offset(5,40) A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.8);
		#### H 1 offset(9,47){
			if(invoker.weaponstatus[COLTM4S_CHAMBER]==1){
			
				A_EjectCasing("HDSpent6mmFlechette",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COLTM4S_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COLTM4S_MAG]>0){
				invoker.weaponstatus[COLTM4S_MAG]--;
				invoker.weaponstatus[COLTM4S_CHAMBER]=2;
			}
		}
		#### I 2 offset(7,41);
		#### J 2 offset(6,39);
		#### K 3 offset(5,37);
		#### A 2 offset(2,36);
		goto nope;


	unloadchamber:
		#### F 2 offset(2,34) A_JumpIf(invoker.weaponstatus[COLTM4S_CHAMBER]<1,"nope");
		#### G 2 offset(5,40) A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.8);
		#### H 1 offset(9,47){
			class<actor>which=invoker.weaponstatus[COLTM4S_CHAMBER]>1?"HD6mmFlechetteAmmo":"HDSpent6mmFlechette";
			invoker.weaponstatus[COLTM4S_CHAMBER]=0;
				
				A_EjectCasing(which,
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,-3,-2)
				);
		}
		#### I 2 offset(7,41);
		#### J 2 offset(6,39);
		#### K 3 offset(5,37);
		#### A 2 offset(2,36);
		goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[COLTM4S_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HD6mmFlechetteAmmo"),"nope");
		---- A 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
		---- A 1 offset(2,36);
		#### B 1 offset(5,40);
		#### B 4 offset(4,39){
			if(countinv("HD6mmFlechetteAmmo")){
				A_TakeInventory("HD6mmFlechetteAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[COLTM4S_CHAMBER]=2;
				A_StartSound("weapons/smg/355/fwd",CHAN_7);
			}
		}
		#### B 7 offset(5,37);
		#### B 1 offset(2,36);
		#### A 1 offset(0,34);
		goto readyend;
	user4:
	unload:
		#### A 0{
			invoker.weaponstatus[0]|=COLTM4F_JUSTUNLOAD;
			if(
				invoker.weaponstatus[COLTM4S_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[COLTM4S_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		#### A 0{
			invoker.weaponstatus[0]&=~COLTM4F_JUSTUNLOAD;
			if(invoker.weaponstatus[COLTM4S_MAG]>=42)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"PB_HDSteyrACRMag")){
				if(
					invoker.weaponstatus[COLTM4S_MAG]<0
					&&countinv("HD6mmFlechetteAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(5,38);
		#### A 1 offset(10,42);
		#### C 2 offset(20,46) 
		{if(invoker.weaponstatus[COLTM4S_MAG]>=0)A_StartSound("weapons/rifleclick2",CHAN_7);}
		#### D 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			if(invoker.weaponstatus[COLTM4S_MAG]>=0)A_StartSound("weapons/rifleunload",CHAN_7);
		}
		#### E 0{
			int magamt=invoker.weaponstatus[COLTM4S_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[COLTM4S_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("PB_HDSteyrACRMag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"PB_HDSteyrACRMag",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"PB_HDSteyrACRMag",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### EE 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### E 0{
			if(invoker.weaponstatus[0]&COLTM4F_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### E 0 A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
		#### E 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 10 offset(32,50) A_StartSound("weapons/rifleload",CHAN_7);
		#### E 3 offset(32,49){
			let mmm=hdmagammo(findinventory("PB_HDSteyrACRMag"));
			if(mmm){
				invoker.weaponstatus[COLTM4S_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/rifleclick",CHAN_7);
			}
			if(
				invoker.weaponstatus[COLTM4S_MAG]<1
				||invoker.weaponstatus[COLTM4S_CHAMBER]>1
			)setweaponstate("reloadend");
		}
		goto chamber.cool;
	chamber:
		#### E 2 offset(33,50){
			invoker.weaponstatus[COLTM4S_MAG]--;
			invoker.weaponstatus[COLTM4S_CHAMBER]=2;
		}
		#### E 4 offset(32,49) A_StartSound("weapons/smg/355/fwd",CHAN_7);
		goto reloadend;
		
	chamber.cool:
		#### E 2 offset(32,47);
		#### D 2 offset(34,44);
		#### C 2 offset(36,45);
		#### F 2 offset(38,47);
		#### G 2 offset(42,50) A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.8);
		#### H 1 offset(45,52)
		{
			if(invoker.weaponstatus[COLTM4S_CHAMBER]==1)
			A_EjectCasing("HDSpent6mmFlechette",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,-5,-2)
				);
			
			invoker.weaponstatus[COLTM4S_MAG]--;
			invoker.weaponstatus[COLTM4S_CHAMBER]=2;
		}
		#### I 2 offset(46,51);
		#### J 2 offset(47,49);
		#### K 3 offset(43,47);
		#### A 2 offset(40,46);
	reloadend.cool:
		#### A 3 offset(30,46);
		#### A 2 offset(20,42);
		#### A 2 offset(15,38);
		#### A 2 offset(5,34);
		#### A 1 offset(2,33);
		goto nope;

	reloadend:
		#### E 3 offset(30,52);
		#### E 2 offset(20,46);
		#### D 1 offset(10,42);
		#### C 1 offset(5,38);
		#### A 1 offset(0,34);
		goto nope;

	spawn:
		M4CP A -1 nodelay{
			if(invoker.weaponstatus[COLTM4S_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponspecial = 1337;
		weaponstatus[0]=0;
		weaponstatus[COLTM4S_MAG]=42;
		weaponstatus[COLTM4S_CHAMBER]=2;
		if(!idfa)weaponstatus[COLTM4S_AUTO]=0;
	}
	override void loadoutconfigure(string input){
		int firemode=getloadoutvar(input,"firemode",1);
		if(firemode>0)weaponstatus[COLTM4S_AUTO]=clamp(firemode,0,1);
	}
}

enum coltm4a1status{
	COLTM4F_JUSTUNLOAD=1,
	COLTM4F_LASER=2,

	COLTM4S_FLAGS=0,
	COLTM4S_MAG=1,
	COLTM4S_CHAMBER=2,
	COLTM4S_AUTO=3,
	COLTM4S_RATCHET=4,
	COLTM4S_HEAT=5,
};
