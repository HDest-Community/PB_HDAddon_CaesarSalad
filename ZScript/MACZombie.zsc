// ------------------------------------------------------------
// Pistol guy
// ------------------------------------------------------------
class PB_UndeadHomeslice:HDHumanoid{
	//tracking ammo
	int chamber;
	int thismag;
	int firemode; //based on the old pistol method: -1=semi only, 0=semi selected, 1=full auto

	//specific to undead homeboy
	int user_weapon; //0 random, 1 semi, 2 auto

	override void postbeginplay(){
		super.postbeginplay();
		bhasdropped=false;

		//specific to undead homeboy
		thismag=random(1,32);
		chamber=2;
		if(
			user_weapon==2
			||(
				user_weapon!=1
				&&!random(0,32)
			)
		)firemode=randompick(0,0,0,1);
		else firemode=-1;
	}
	
	void A_EjectMACCasing(){
		HDWeapon.EjectCasing(self,"HDSpent45ACP",
			-frandom(89,92),
			(frandom(6,7),0,frandom(0,1)),
			(10,0,0)
		);
	}
	
	virtual bool noammo(){
		return chamber<1&&thismag<1;
	}

	//post-shot checks
	void A_HDMonsterRefire(statelabel jumpto,int chancetocontinue=0){
		if(
			random(1,100)>chancetocontinue
			&&(
				!target
				||!checksight(target)
				||target.health<1
				||absangle(angle,angleto(target))>3
				||!hdmobai.tryshoot(self,flags:hdmobai.TS_GEOMETRYOK)
			)
		)setstatelabel(jumpto);
	}


	void A_PistolZombieAttack(){
		if(chamber<2){
			if(chamber>0)A_EjectMACCasing();
			if(thismag>0){
				chamber=2;
				thismag--;
			}
			setstatelabel("postshot");
			return;
		}

		pitch+=frandom(0,spread)-frandom(0,spread);
		angle+=frandom(0,spread)-frandom(0,spread);
		HDBulletActor.FireBullet(self,"HDB_45ACP",spread:5.,speedfactor:frandom(0.91,0.95));

		A_Recoil(0.1);
		A_StartSound("weapons/MAC11Shot",CHAN_WEAPON);
		pitch+=frandom(-0.4,0.3);
		angle+=frandom(-0.4,0.4);

		A_EjectMACCasing();
		if(thismag>0)thismag--;
		else chamber=0;
	}
	override void deathdrop(){
		if(bhasdropped){
			DropNewItem("HDMAC10_Mag",96);
		}else{
			bhasdropped=true;
			let ppp=DropNewWeapon("HDMAC10");
			ppp.weaponstatus[MACS_MAG]=thismag;
			ppp.weaponstatus[MACS_AUTO]=1;
			//ppp.weaponstatus[MACS_CHAMBER]=chamber;
			
			//if (!random(0, 12))DropNewWeapon("HDCombatKnife");
			
			/*if(firemode>=0){
				ppp.weaponstatus[0]|=PI5F_SELECTFIRE;
				if(firemode>0)ppp.weaponstatus[0]|=PI5F_FIREMODE;
			}*/
		}
	}
	void A_PistolZombieUnload(int which=0){
		if(thismag>=0){
			HDMagAmmo.SpawnMag(self,"HDMAC10_Mag",thismag);
			A_StartSound("weapons/smgmagclick",8);
		}
		thismag=-1;
	}
	bool A_HDReload(int which=0){
		if(thismag>=0)return false;
		thismag=32;
		if(chamber<2){
			if(chamber>0)A_EjectMACCasing();
			chamber=2;
			thismag--;
		}
		A_StartSound("weapons/smgmagclick",8);
		return true;
	}


	//defaults and states
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Zombieman (MAC10)"
		//$Sprite "PSZMA1"

		seesound "grunt/sight";
		painsound "grunt/pain";
		deathsound "grunt/death";
		activesound "grunt/active";
		tag "Undead Hoodlum";

		radius 10;
		speed 23;
		mass 100;
		painchance 200;
		obituary "%o was swiss cheesed by a hoodlum.";
		hitobituary "%o was pistol whipped by a hoodlum.";
		maxtargetrange HDCONST_ONEMETRE*30;
	}
	states{
	spawn:
		PSZM E 1{
			A_HDLook();
			A_Recoil(frandom(-0.1,0.1));
		}
		#### EEE random(5,17) A_HDLook();
		#### E 1{
			A_Recoil(frandom(-0.1,0.1));
			A_SetTics(random(10,40));
		}
		#### B 0 A_JumpIf(noammo(),"reload");
		#### B 0 A_Jump(28,"spawngrunt");
		#### B 0 A_Jump(132,"spawnswitch");
		#### B 8 A_Recoil(frandom(-0.2,0.2));
		loop;
	spawngrunt:
		#### V 1{
			A_Recoil(frandom(-0.4,0.4));
			A_SetTics(random(30,80));
			if(!random(0,7))A_Vocalize(activesound);
		}
		#### A 0 A_Jump(256,"spawn");
	spawnswitch:
		#### A 0 A_JumpIf(bambush,"spawnstill");
		goto spawnwander;
	spawnstill:
		#### A 0 A_HDLook();
		#### A 0 A_Recoil(random(-1,1)*0.4);
		#### CD 5 A_SetAngle(angle+random(-4,4));
		#### A 0{
			A_HDLook();
			if(!random(0,127))A_Vocalize(activesound);
		}
		#### AB 5 A_SetAngle(angle+random(-4,4));
		#### B 1 A_SetTics(random(10,40));
		#### A 0 A_Jump(256,"spawn");
	spawnwander:
		#### CDAB 5 A_HDWander();
		#### A 0 A_Jump(64,"spawn");
		loop;

	see:
		#### ABCD random(3,4) A_HDChase();
		#### A 0 A_JumpIf(noammo(),"reload");
		#### A 0 A_Jump(116,"roam","roam","roam","roam2","roam2");
		loop;
	roam:
		#### VVVV 3 A_Watch();
		#### A 0 A_Jump(60,"roam");
	roam2:
		#### A 0 A_JumpIf(targetinsight||!random(0,31),"see");
		#### ABCD 5 A_HDChase(speedmult:0.6);
		#### A 0 A_Jump(80,"roam");
		loop;

	missile:
		#### ABCD 3 A_TurnToAim(20);
		loop;
	shoot:
		#### E 16 A_Vocalize(seesound);
		#### E 1 A_StartAim(maxspread:20,maxtics:random(0,35));
		#### E 2 A_LeadTarget(lasttargetdist*0.01,randompick(0,0,0,1));
	fire:
		#### F 1 bright light("SHOT") A_PistolZombieAttack();
	postshot:
		//#### E 3;
		#### E 0 A_JumpIf(chamber!=2||!target,"nope");
		#### E 0{
				pitch+=frandom(-2.4,2);
				angle+=frandom(-2,2);
				//setstatelabel("fire");
		}
		#### E 0 A_Jump(220,"fire");
	done.shootin:
		#### E 12;
		goto see;
	nope:
		#### E 10;
	reload:
		#### ABCD 4 A_HDChase("melee",null,CHF_FLEE);
		#### A 7 A_PistolZombieUnload();
		#### BC 7 A_HDChase("melee",null,CHF_FLEE);
		#### D 8 A_HDReload();
		#### D 4 A_StartSound("weapons/MACboltback",CHAN_6);
		---- A 0 setstatelabel("see");

	pain:
		#### G 2;
		#### G 3 A_Vocalize(painsound);
		#### G 0{
			A_ShoutAlert(0.1,SAF_SILENT);
			if(
				floorz==pos.z
				&&target
				&&(
					!random(0,4)
					||distance3d(target)<128
				)
			){
				double ato=angleto(target)+randompick(-90,90);
				vel+=((cos(ato),sin(ato))*speed,1.);
				setstatelabel("missile");
			}
		}
		#### ABCD 2 A_HDChase(flags:CHF_FLEE);
		---- A 0 setstatelabel("see");
	death:
		#### H 5;
		#### I 5 A_Vocalize(deathsound);
		#### J 5 A_NoBlocking();
		#### K 5;
	dead:
		#### K 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### L 5 canraise{if(abs(vel.z)>=2.)setstatelabel("dead");}
		wait;
	xxxdeath:
		#### M 5;
		#### N 5{
			spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
			A_XScream();
		}
		#### OPQRST 5;
		goto gibbed;
	gib:
		#### M 5;
		#### N 3{
			spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
			A_XScream();
		}
		#### O 0 A_NoBlocking();
		#### OP 3 spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
		#### QRST 3;
		//goto gibbed;
	gibbed:
		#### T 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### U 5 canraise A_JumpIf(abs(vel.z)>=2.,"gibbed");
		wait;
	raise:
		#### L 4;
		#### LK 6;
		#### JIH 4;
		#### A 0 A_Jump(256,"see");
	ungib:
		#### U 12;
		#### T 8;
		#### SRQ 6;
		#### PONM 4;
		#### A 0 A_Jump(256,"see");
	}
}

// ------------------------------------------------------------
// SpecOps
// ------------------------------------------------------------
class PB_SpecOpsZombie:HDHumanoid{	
	//tracking ammo
	int chamber;
	int thismag;
	int firemode; //based on the old pistol method: -1=semi only, 0=semi selected, 1=full auto
	bool allowemit;

	//specific to undead homeboy
	int user_weapon; //0 random, 1 semi, 2 auto

	override void postbeginplay(){
		super.postbeginplay();
		givearmour(1.,0.0,-0.6);
		bhasdropped=false;
		allowemit=true;
		//specific to undead homeboy
		thismag=random(1,12);
		bshadow=true;
	}
	
	void A_EjectSOCOMCasing(){
		HDWeapon.EjectCasing(self,"HDSpent45ACP",
			-frandom(89,92),
			(frandom(6,7),0,frandom(0,1)),
			(10,0,0)
		);
	}
	
	virtual bool noammo(){
		return chamber<1&&thismag<1;
	}

	//post-shot checks
	void A_HDMonsterRefire(statelabel jumpto,int chancetocontinue=0){
		if(
			random(1,100)>chancetocontinue
			&&(
				!target
				||!checksight(target)
				||target.health<1
				||absangle(angle,angleto(target))>3
				||!hdmobai.tryshoot(self,flags:hdmobai.TS_GEOMETRYOK)
			)
		)setstatelabel(jumpto);
	}


	void A_PistolZombieAttack(){
		if(chamber<2){
			if(chamber>0)A_EjectSOCOMCasing();
			if(thismag>0){
				chamber=2;
				thismag--;
			}
			setstatelabel("postshot");
			return;
		}

		pitch+=frandom(0,spread)-frandom(0,spread);
		angle+=frandom(0,spread)-frandom(0,spread);
		HDBulletActor.FireBullet(self,"HDB_45ACP",spread:0.35,speedfactor:frandom(0.95,0.99));
		spread++;
		A_EjectSOCOMCasing();
		A_StartSound("weapons/mk23shot",CHAN_WEAPON);
		
		if(thismag>0)thismag--;
		else chamber=0;
	}
	override void deathdrop(){
	
		A_SetRenderStyle(1,STYLE_Normal);
		if(bshadow){
		//	if(random(0,3))A_DropItem("HDBlurSphere");
			bshadow=false;
		}
		if(bhasdropped){
			DropNewItem("HDMK23SOCOM_Mag",96);
		}else{
			bhasdropped=true;
			let ppp=DropNewWeapon("HDMK23SOCOM");
			ppp.weaponstatus[MK23S_MAG]=thismag;
			ppp.weaponstatus[MK23S_CHAMBER]=chamber;
			
			if (!random(0, 12))DropNewWeapon("HDCombatKnife");
			//if (!random(0, 1))
			//{
				A_SpawnItemEx("HDFragSpoon");
				A_SpawnItemEx("HDFragGrenadeRoller");
			//}
		}
	}
	void A_PistolZombieUnload(int which=0){
		if(thismag>=0){
			//HDMagAmmo.SpawnMag(self,"HDMK23SOCOM_Mag",thismag);
			A_StartSound("weapons/mk23magout",8);
		}
		thismag=-1;
	}
	bool A_HDReload(int which=0){
		if(thismag>=0)return false;
		thismag=12;
		if(chamber<2){
			if(chamber>0)A_EjectSOCOMCasing();
			chamber=2;
			thismag--;
		}
		A_StartSound("weapons/mk23magclick",8);
		return true;
	}


	int invisticker;
	override void Tick(){
		super.Tick();
		if(
			isFrozen()
			||!bshadow
		)return;
		
		if(grenadecooldown>0){grenadecooldown--;}
		
		if(frame==5)invisticker=8;
		else if(invisticker>0)invisticker--;

		bool invis=!invisticker&&(level.time&(1|2|4));
		if(
			!invisticker
			&&frame<5
			&&(
				abs(vel.x)<2
				&&abs(vel.y)<2
			)
		)invis=true;
		
		if(invis){
			bspecialfiredamage=true;
			A_SetRenderStyle(0,STYLE_ColorAdd);
			//if(allowemit==true)A_SpawnItemEx("PB_SpecOpsBlur2",frandom(-2,2),frandom(-2,2),frandom(-2,2),flags:SXF_TRANSFERSPRITEFRAME);
		}else{
			bspecialfiredamage=false;
			A_SetRenderStyle(1,STYLE_Add);
			if(allowemit==true)A_SpawnItemEx("PB_SpecOpsBlur",frandom(-2,2),frandom(-2,2),frandom(-2,2),flags:SXF_TRANSFERSPRITEFRAME);
		}
		
		if(instatesequence(curstate,resolvestate("missile"))
		||instatesequence(curstate,resolvestate("shoot"))
		||instatesequence(curstate,resolvestate("aiming"))
		||instatesequence(curstate,resolvestate("aiming.cont"))
		||instatesequence(curstate,resolvestate("fire"))
		||instatesequence(curstate,resolvestate("postshot"))
		||instatesequence(curstate,resolvestate("pain"))
		||instatesequence(curstate,resolvestate("gasbomb.throw"))
		)
		{
			//bshadow=false;
			//invis=false;
			allowemit=false;
			A_SetRenderStyle(1,STYLE_Normal);
			//A_print("no stuff",35);
		}else 
		
		{
			allowemit=true;
			//A_print("stuff",35);
		}
		
	}
	
	int grenadecooldown;
	void A_SpecGasGrenade(){
		bool garbage;actor gg;
		double cpp=cos(pitch);double spp=sin(pitch);
		[garbage,gg]=A_SpawnItemEx("HDGasGrenadeSpoon",
			cpp*-4,-3,height-6-spp*-4,
			cpp*3,0,-spp*3,
			frandom(30,45),SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
		);
		gg.vel+=self.vel;
		double gforce=frandom(10,30);
		[garbage,gg]=A_SpawnItemEx("HDGasGrenadeThrown_Special",
			0,0,height-6,
			cpp*gforce,0,-spp*gforce,
			0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
		);
		gg.vel+=self.vel;
		grenadecooldown=700;
	}

	//defaults and states
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Spec-Ops Zombie"
		//$Sprite "MIBZA1"

		seesound "";
		painsound "grunt/specops/pain";
		deathsound "grunt/specops/death";
		activesound "";
		tag "''Janitor''";

		hdmobbase.downedframe 13; //"N"
		radius 10;
		speed 27;
		mass 100;
		painchance 200;
		//health 150;
		//obituary "%o was silenced.";
		//hitobituary "%o was silenced.";
		obituary " ";
		hitobituary " ";
		
		maxtargetrange HDCONST_ONEMETRE*60;
	}
	states{
	spawn:
		MIBZ E 1{
			A_HDLook();
			A_Recoil(frandom(-0.1,0.1));
		}
		#### EEE random(5,17) A_HDLook();
		#### E 1{
			A_Recoil(frandom(-0.1,0.1));
			A_SetTics(random(10,40));
		}
		#### B 0 A_JumpIf(noammo(),"reload");
		#### B 0 A_Jump(28,"spawngrunt");
		#### B 0 A_Jump(132,"spawnswitch");
		#### B 8 A_Recoil(frandom(-0.2,0.2));
		loop;
	spawngrunt:
		#### E 1{
			A_Recoil(frandom(-0.4,0.4));
			A_SetTics(random(30,80));
			if(!random(0,7))A_Vocalize(activesound);
		}
		#### A 0 A_Jump(256,"spawn");
	spawnswitch:
		#### A 0 A_JumpIf(bambush,"spawnstill");
		goto spawnwander;
	spawnstill:
		#### A 0 A_HDLook();
		#### A 0 A_Recoil(random(-1,1)*0.4);
		#### CD 5 A_SetAngle(angle+random(-4,4));
		#### A 0{
			A_HDLook();
			if(!random(0,127))A_Vocalize(activesound);
		}
		#### AB 5 A_SetAngle(angle+random(-4,4));
		#### B 1 A_SetTics(random(10,40));
		#### A 0 A_Jump(256,"spawn");
	spawnwander:
		#### CDAB 5 Bright A_HDWander();
		#### A 0 A_Jump(64,"spawn");
		loop;

	see:
		#### ABCD random(3,4) Bright A_HDChase(flags:CHF_FLEE);
		#### A 0 A_JumpIf(noammo(),"reload");
		#### A 0 A_Jump(116,"roam","roam","roam","roam2","roam2");
		loop;
	roam:
		#### EEEE 3 Bright A_Watch();
		#### A 0 A_Jump(60,"roam");
	roam2:
		#### A 0 A_JumpIf(targetinsight||!random(0,31),"see");
		#### ABCD 5 Bright A_HDChase(speedmult:0.6);
		#### A 0 A_Jump(80,"roam");
		loop;


	gasbomb.throw:
		#### A 0
		{
			if(grenadecooldown>0){
				setstatelabel("see");
			}
		}
		#### E 7{
			A_StartSound("weapons/pocket",CHAN_7);
			A_FaceTarget(0,0);
			pitch-=random(10,20);
		}
		#### E 3;
		#### F 5{
			//A_SpawnItemEx("HDFragSpoon",cos(pitch)*4,-1,height-6-sin(pitch)*4,cos(pitch)*cos(angle)*4+vel.x,cos(pitch)*sin(angle)*4+vel.y,sin(-pitch)*4+vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_SpecGasGrenade();
		}
		#### A 0 A_JumpIf(thismag<1,"reload");
		goto see;
	
	missile:
		//#### E 1 A_TurnToAim(20);
		#### E 3 A_TurnToAim(30,shootstate:"aiming");
		loop;
	aiming:
		#### E 3 A_FaceLastTargetPos(30);
	aiming.cont:
		#### F 1 A_FaceLastTargetPos(30);
		#### F 1 A_StartAim(maxspread:20,maxtics:random(0,15));
	shoot:
		#### F 3 A_FaceLastTargetPos(30);
	fire:
		#### G 1 bright light("SHOT") A_PistolZombieAttack();
	postshot:
		#### F 1;
		#### F 0 A_JumpIf(chamber!=2||!target,"nope");
		#### F 1
		{
			A_SetTics(random(1,2));
			spread=max(0,spread-1);
		}
		#### F 2 A_HDMonsterRefire("gasbomb.throw",32);
		goto aiming.cont;
	nope:
		#### FE 5;
	reload:
		#### ABCD 4 A_HDChase("melee",null,CHF_FLEE);
		#### A 7 A_PistolZombieUnload();
		#### BC 7 A_HDChase("melee",null,CHF_FLEE);
		#### D 12 A_HDReload();
		---- A 0 setstatelabel("see");

	pain:
		#### H 2;
		#### H 3 A_Vocalize(painsound);
		#### H 0{
			A_ShoutAlert(0.1,SAF_SILENT);
			if(
				floorz==pos.z
				&&target
				&&(
					!random(0,4)
					||distance3d(target)<128
				)
			){
				double ato=angleto(target)+randompick(-90,90);
				vel+=((cos(ato),sin(ato))*speed,1.);
				if(grenadecooldown<1)setstatelabel("gasbomb.throw");
			}
		}
		#### ABCD 2 A_HDChase(flags:CHF_FLEE);
		---- A 0 setstatelabel("see");
	death:
		#### I 5;
		#### J 5 A_Vocalize(deathsound);
		#### K 5 A_NoBlocking();
		#### L 5;
	dead:
		#### L 3 canraise{if(abs(vel.z)<2.)frame++;}
		#### M 5 canraise{if(abs(vel.z)>=2.)setstatelabel("dead");}
		wait;
	
	falldown:
		#### I 5;
		#### J 5 A_Vocalize(deathsound);
		#### KKLLL 2 A_SetSize(-1,max(deathheight,height-10));
		#### L 0 A_SetSize(-1,deathheight);
		#### M 10 A_KnockedDown();
		wait;
	standup:
		#### L 6;
		#### K 0 A_Jump(160,2);
		#### K 0 A_Vocalize(seesound);
		#### KJ 4 A_Recoil(-0.3);
		#### IE 6;
		#### A 0 setstatelabel("see");
	
	xxxdeath:
		#### N 5;
		#### O 5{
			spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
			A_XScream();
		}
		#### OPQRS 5;
		goto gibbed;
	gib:
		#### N 5;
		#### O 5{
			spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
			A_XScream();
		}
		#### O 0 A_NoBlocking();
		#### OP 5 spawn("MegaBloodSplatter",pos+(0,0,34),ALLOW_REPLACE);
		#### QRST 5;
	gibbed:
		#### U 5 canraise{if(abs(vel.z)<2.)frame++;}
		#### V 5 canraise A_JumpIf(abs(vel.z)>=2.,"gibbed");
		wait;
	raise:
		#### L 4 {bshadow=true;}
		#### LK 6;
		#### JIH 4;
		#### A 0 A_Jump(256,"see");
	ungib:
		#### V 12{bshadow=true;}
		#### U 8;
		#### TSRQ 6;
		#### PON 4;
		#### A 0 A_Jump(256,"see");
	}
}

class PB_SpecOpsBlur:HDActor{
	default{
		+nointeraction
		alpha 0.2;
		//translation "NinjaPirate";
		renderstyle "add";
	}
	states{
	spawn:
		MIBZ # 12 nodelay A_SetRenderStyle(0,style_none);
		MIBZ # 0 Bright 
		{
			A_SetRenderStyle(0.2,style_add);
			A_ChangeVelocity(frandom(-0.25,0.25),frandom(-0.25,0.25),frandom(-0.25,0.25));
		}
		MIBZ # 1 Bright A_FadeOut(0.01);
		wait;
	}
}
