// ------------------------------------------------------------
// Former Human
// ------------------------------------------------------------

class PB_ColtSMGZombie:HDHumanoid{
	default{
		//$Category "Monsters/Hideous Destructor"
		//$Title "Zombieman"
		//$Sprite "POSSA1"

		seesound "grunt/sight";
		painsound "grunt/pain";
		deathsound "grunt/death";
		activesound "grunt/active";
		tag ".355 SMG Zombie";

		radius 10;
		speed 15;
		mass 100;
		painchance 200;
		obituary "%o was magdumped by a CQB zombie.";
		hitobituary "%o received the CQB zombie's specialty.";
	}
	double turnamount;
	int user_weapon;
	int mag;
	int firemode; // -1 semi only; 0 semi; 1 auto;

	override void postbeginplay(){
		super.postbeginplay();
		
		//bhashelmet;
		givearmour(1.,0.06,-0.4);
		
		if(user_weapon)accuracy=user_weapon;
		if(accuracy==1)firemode=random(0,3);
		else if(accuracy==2)firemode=-1;
		else firemode=random(-1,3);
		if(firemode==-1){
			mag=random(1,25);
		}else{
			mag=random(1,25);
			if(firemode>2)firemode=1;
			maxtargetrange=2500;
		}
	}

	void A_ZomFrag(){
		bool garbage;actor gg;
		double cpp=cos(pitch);double spp=sin(pitch);
		[garbage,gg]=A_SpawnItemEx("HDFragSpoon",
			cpp*-4,-3,height-6-spp*-4,
			cpp*3,0,-spp*3,
			frandom(30,45),SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
		);
		gg.vel+=self.vel;
		double gforce=frandom(10,30);
		[garbage,gg]=A_SpawnItemEx("HDFragGrenade",
			0,0,height-6,
			cpp*gforce,0,-spp*gforce,
			0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
		);
		gg.vel+=self.vel;
	}
	
	void A_EjectColtCasing(){
		HDWeapon.EjectCasing(self,"HDSpent355",
			-frandom(89,92),
			(frandom(6,7),0,frandom(0,1)),
			(4,0,0)
		);
	}
	
	override void deathdrop(){
		if(bhasdropped&&bfriendly)return;
		hdweapon wp=null;{
			if(!bhasdropped){
				if(wp=DropNewWeapon("HDColt355")){
					(random(0,1)*COLT9S_CHAMBER);
					wp.weaponstatus[COLT9S_MAG]=mag;
					if(firemode==-1)wp.weaponstatus[0];
				}
				DropNewItem("HDFragGrenadeAmmo",42);
				if (!random(0, 8))DropNewWeapon("HDCombatKnife");
			}else{
				DropNewItem("HDColt9mmMag25",96);
			}
		}
		if(!bhasdropped){
			DropNewItem("HDHandgunRandomDrop");
			bhasdropped=true;
		}
	}
	
	//post-shot checks
	void A_HDMonsterRefire(statelabel jumpto,int chancetocontinue=0){
		if(
			random(1,100)>chancetocontinue
			&&(
				!target
				||!checksight(target)
				||target.health<1
				||absangle(angle,angleto(target))>3
				||!hdmobai.tryshoot(self,flags:hdmobai.TS_GEOMETRYOK)
			)
		)setstatelabel(jumpto);
	}
	
	states{
	spawn:
		CMGZ A 0;
	idle:
	spawn2:
		#### A 0{
			A_HDLook();
			A_Recoil(frandom(-0.1,0.1));
		}
		#### EEE 1{
			A_SetTics(random(5,17));
			A_HDLook();
		}
		#### E 1{
			A_Recoil(frandom(-0.1,0.1));
			A_SetTics(random(10,40));
		}
		#### B 0 A_Jump(28,"spawngrunt");
		#### B 0 A_Jump(132,"spawnswitch");
		#### B 8 A_Recoil(frandom(-0.2,0.2));
		loop;
	spawngrunt:
		#### G 1{
			A_Recoil(frandom(-0.4,0.4));
			A_SetTics(random(30,80));
			if(!random(0,7))A_Vocalize(activesound);
		}
		#### A 0 A_Jump(256,"spawn2");
	spawnswitch:
		#### A 0 A_JumpIf(bambush,"spawnstill");
		goto spawnwander;
	spawnstill:
		#### A 0 A_HDLook();
		#### A 0 A_Recoil(random(-1,1)*0.4);
		#### CD 5 A_SetAngle(angle+random(-4,4));
		#### A 0{
			A_HDLook();
			if(!random(0,127))A_Vocalize(activesound);
		}
		#### AB 5 A_SetAngle(angle+random(-4,4));
		#### B 1 A_SetTics(random(10,40));
		#### A 0 A_Jump(256,"spawn2");
	spawnwander:
		CMGZ A 0 A_HDLook();
		#### CD 5 A_Wander();
		#### AB 5{
			A_HDLook();
			if(!random(0,15))A_Vocalize(activesound);
			A_Wander();
		}
		#### A 0 A_Jump(196,"spawn");
		loop;
	missile:
		#### A 0{
			if(!target){
				setstatelabel("spawn2");
				return;
			}
			double dt=distance3d(target);
			/*if(
				target
				&&!random(0,12)
				&&dt>600
				&&dt<1000
			)setstatelabel("frag");*/
		}
	missile2:
		#### ABCD 3 A_TurnToAim(40,shootstate:"aiming");
		loop;
	aiming:
		#### E 0
		{
			double dt=distance3d(target);
			if(
				target
				&&dt>1000
			)setstatelabel("aiming.lr");
		}
		#### E 5 A_FaceLastTargetPos(30);
		#### E 1 A_StartAim(maxspread:20,maxtics:random(0,35));
		//fallthrough to shoot
	shoot:
		#### E 1 A_SetTics(min(1,int(lasttargetdist)>>5));
		#### E 0{
			pitch+=frandom(-spread,spread);
			angle+=frandom(-spread,spread);
			
			A_LeadTarget(lasttargetdist*0.01,randompick(0,0,0,1));
		}
	fire:
		#### F 1 bright light("SHOT"){
			if(mag<1){
				setstatelabel("ohforfuckssake");
				return;
			}else{
				A_StartSound("weapons/smg/355",CHAN_WEAPON);
				HDBulletActor.FireBullet(self,"HDB_355",spread:2.5,speedfactor:1.25);
				
				
		HDWeapon.EjectCasing(self,"HDSpent355",
			-frandom(89,92),
			(frandom(6,7),0,frandom(0,1)),
			(4,0,0)
		);
				
				pitch+=frandom(-0.2,0.1)*spread;
				angle+=frandom(-0.2,0.1)*spread;
				mag--;}
		}
		#### E 2{spread++;}
		#### A 0 A_Jump(220,"fire");
	postshot:
		#### E 12{
			if(!random(0,127))A_Vocalize(activesound);
			if(mag<1){
				setstatelabel("reload");
				return;
			}
			spread=max(0,spread-1);
			A_SetTics(random(2,6));
		}
		#### E 3;
		#### E 0 A_JumpIf(!hdmobai.tryshoot(self),"see");
		#### E 0 A_JumpIfTargetInLOS(1);
		goto coverfire;  //even if not in los,occasionally keep shooting anyway
		#### E 3 A_FaceTarget(10,10);
		#### E 0 A_Jump(50,"see");  //even if in los,occasionally stop shooting anyway
		goto coverfire;

	coverfire:
		#### E 1{
			spread=2;
			A_Coverfire();
			A_SetTics(random(2,6));
		}
		wait;

	aiming.lr:
		#### V 9 A_FaceLastTargetPos(60);
		#### V 1 A_StartAim(maxspread:20,maxtics:random(0,35));
		#### V 1 A_LeadTarget(lasttargetdist*0.01,randompick(0,0,0,1));
		//fallthrough to shoot
	shoot:
		#### V 1 A_SetTics(min(1,int(lasttargetdist)>>5));
		#### V 0{
			pitch+=frandom(-spread,spread);
			angle+=frandom(-spread,spread);
		}
	fire.lr:
		#### W 1 bright light("SHOT"){
			if(mag<1){
				setstatelabel("ohforfuckssake");
				return;
			}else{
				A_StartSound("weapons/smg/355",CHAN_WEAPON);
				HDBulletActor.FireBullet(self,"HDB_355",spread:1.0,speedfactor:1.25);
				A_EjectColtCasing();
				pitch+=frandom(-spread,spread*0.5)*0.1;
				angle+=frandom(-spread*0.5,spread)*0.1;
				mag--;}
		}
		#### V 2;
		#### A 0; //A_Jump(128,"fire.lr");
		//fallthrough to postshot
	postshot.lr:
		#### V 12{
			if(!random(0,127))A_Vocalize(activesound);
			if(mag<1){
				setstatelabel("reload");
				return;
			}
			spread=max(0,spread-1);
			A_SetTics(random(2,6));
		}
		#### V 3;
		#### V 0 A_JumpIf(!hdmobai.tryshoot(self),"see");
		#### V 0 A_JumpIfTargetInLOS(1);
		goto coverfire;  //even if not in los,occasionally keep shooting anyway
		#### V 3 A_FaceTarget(10,10);
		#### V 0 A_Jump(50,"see");  //even if in los,occasionally stop shooting anyway
		goto coverfire;
		
	frag:
		#### A 10 A_Vocalize(seesound);
		#### A 20{
			A_StartSound("weapons/pocket",CHAN_WEAPON);
			A_FaceTarget(0,0);
			pitch-=random(10,50);
		}
		#### E 15;
		#### E 10{
			A_SpawnItemEx("HDFragSpoon",cos(pitch)*4,-1,height-6-sin(pitch)*4,cos(pitch)*cos(angle)*4+vel.x,cos(pitch)*sin(angle)*4+vel.y,sin(-pitch)*4+vel.z,0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_ZomFrag();
		}
		#### A 0 A_JumpIf(mag<1,"reload");
		#### A 0 setstatelabel("see");

	jammed:
		#### E 8;
		#### E 0 A_Jump(128,"see");
		#### E 4 A_Vocalize(random(0,2)?seesound:painsound);
		---- A 0 setstatelabel("see");

	ohforfuckssake:
		#### E 8;
	reload:
		---- A 0 A_JumpIf(mag<0,"unloadedreload");
		---- A 6 A_StartSound("weapons/rifleclick2");
		#### AA 1 A_HDChase("melee",null,flags:CHF_FLEE);
		#### A 0{
			A_StartSound("weapons/rifleunload");
			name emptymag="HDColt9mmMag25";
			HDMagAmmo.SpawnMag(self,emptymag,0);
			mag=-1;
		}
	unloadedreload:
		#### BCD 2 A_HDChase("melee",null,flags:CHF_FLEE);
		#### EE random(12,16) A_StartSound("weapons/pocket",8);
		#### E 12 {A_StartSound("weapons/rifleload",9);A_StartSound("weapons/rifleclick2");}
		#### E 8{
			A_StartSound("weapons/rifleclick2",8);
			mag=25;
		}
		#### E 4; //{A_StartSound("weapons/libchamber2",8);}
		#### E 12 {A_StartSound("weapons/smg/355/fwd",8);}
		#### CCBB 2 A_HDWander();

	see:
		#### A 0{if(firemode>=0)firemode=random(0,2);}
	see2:
		#### A 0 A_JumpIf(!jammed&&mag<1,"reload");
		#### ABCD 4 A_HDChase();
		#### A 0{
			spread=2;
		}
		#### A 0 A_JumpIfTargetInLOS("see");
		#### A 0 A_Jump(24,"roam");
		loop;
	roam:
		#### E 3 A_Jump(60,"roam2");
		#### E 0{spread=1;}
		#### E 4 A_Watch();
		#### E 0{spread=0;}
		#### EEE 4 A_Watch();
		#### A 0 A_Jump(60,"roam");
	roam2:
		#### A 0 A_Jump(8,"see");
		#### ABCD 5 A_HDChase(speedmult:0.6);
		#### A 0 A_Jump(140,"Roam");
		#### A 0 A_JumpIfTargetInLOS("see");
		loop;
	turnaround:
		#### A 0 A_FaceTarget(15,0);
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### E 0{spread=3;}
		#### A 0 A_FaceTarget(15,0);
		#### E 0{spread=6;}
		#### E 2 A_JumpIfTargetInLOS("missile2",40);
		#### E 0{spread=4;}
		#### ABCD 3 A_HDChase();
		---- A 0 setstatelabel("see");
	pain:
		#### G 2;
		#### G 3 A_Vocalize(painsound);
		#### G 0{
			A_ShoutAlert(0.1,SAF_SILENT);
			if(
				floorz==pos.z
				&&target
				&&(
					!random(0,4)
					||distance3d(target)<128
				)
			){
				double ato=angleto(target)+randompick(-90,90);
				vel+=((cos(ato),sin(ato))*speed,1.);
				setstatelabel("missile");
			}
		}
		#### ABCD 2 A_HDChase(flags:CHF_FLEE);
		---- A 0 setstatelabel("see");

	//melee start

	melee:
		#### B 4 A_FaceTarget(0,0);
		#### A 0 A_JumpIf(
			!random(0,15)
			||(
				target
				&&target.pos.z+target.height<pos.z+height*0.6
			)
		,"meleekick");
		#### A 0 A_Jump(256,"meleeheadbig");
	meleekick:
		#### BC 3;
		#### A 6{
			pitch=0;
			A_HumanoidMeleeAttack(frandom(height*0.05,(!!target?target.height:0.4)),1.4);
		}
		#### A 0 setstatelabel("meleeend");
	meleebody:
		#### CD 3;
		#### E 5 A_HumanoidMeleeAttack(height*0.6);
		#### A 0 setstatelabel("meleeend");
	meleehead:
		#### CD 3;
		#### E 5 {
			pitch+=frandom(-40,-8);
			A_HumanoidMeleeAttack(height*0.7);
		}
		#### A 0 setstatelabel("meleeend");
	meleeheadbig:
		#### BC 3;
		#### A 6{
			pitch=0;
			A_HumanoidMeleeAttack(frandom(height*0.05,(!!target?target.height:0.4)),1.4);
		}
		#### CB 3 A_TurnHandDirection(30);
		#### A 8 A_TurnHandDirection(30);
		#### BD 1 A_TurnHandDirection(-30);
		#### V 1 {
			A_TurnHandDirection(-30);
			pitch+=frandom(-45,-8);
			A_HumanoidMeleeAttack(height*0.7,15.);
		}
		#### E 4 A_TurnHandDirection(-10);
		#### A 0 setstatelabel("meleeend");
	meleeend:
		#### D 3 A_JumpIf(
			findstate("missile2",true)
			&&target
			&&!A_JumpIfCloser(64,"null")
		,"meleeendshoot");
		#### A 0 setstatelabel("see");
	meleeendshoot:
		#### E 3;
		#### E 4 A_FaceTarget(10,10);
		#### A 0 setstatelabel("fire");

	//melee end
	falldown:
		#### H 5;
		#### I 5 A_Vocalize(deathsound);
		#### JJKKK 2 A_SetSize(-1,max(deathheight,height-10));
		#### L 0 A_SetSize(-1,deathheight);
		#### L 5;
		#### L 10 A_KnockedDown();
		wait;
	standup:
		#### LK 6;
		#### J 0 A_Jump(160,2);
		#### J 0 A_Vocalize(seesound);
		#### JI 4 A_Recoil(-0.3);
		#### HE 6;
		#### A 0 setstatelabel("see");

	death:
		CMGZ H 5;
		CMGZ I 5{
			A_Vocalize(deathsound);
		}
		CMGZ J 5;
		CMGZ KL 5;
	dead:
		CMGZ L 1;
		CMGZ L 5 canraise{
			if(abs(vel.z)>1)setstatelabel("dead");
		}wait;
	xxxdeath:
		CMGZ O 3;
		CMGZ P 3{
			A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
			A_XScream();
		}
		CMGZ R 2;
		CMGZ QRS 5;
		---- A 0 setstatelabel("xdead");

	xdeath:
		CMGZ O 5;
		CMGZ P 3{
			A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
			A_XScream();
		}
		CMGZ R 2 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		CMGZ Q 5;
		CMGZ Q 0 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
		CMGZ RS 5 A_SpawnItemEx("MegaBloodSplatter",0,0,34,0,0,0,0,160);
	xdead:
		CMGZ S 3;
		CMGZ T 5 canraise{
			if(abs(vel.z)>1)setstatelabel("dead");    
		}wait;
	raise:
		CMGZ M 2 A_SpawnItemEx("MegaBloodSplatter",0,0,4,0,0,3,0,SXF_NOCHECKPOSITION);
		CMGZ ML 6;
		CMGZ KJIH 4;
		#### A 0 A_Jump(256,"see");
	ungib:
		CMGZ T 6 A_SpawnItemEx("MegaBloodSplatter",0,0,4,0,0,3,0,SXF_NOCHECKPOSITION);
		CMGZ TS 12 A_SpawnItemEx("MegaBloodSplatter",0,0,4,0,0,3,0,SXF_NOCHECKPOSITION);
		CMGZ RQ 7;
		CMGZ POH 5;
		#### A 0 A_Jump(256,"see");
	}
}